apply plugin: "java"
apply plugin: "eclipse"
apply plugin: "application"

mainClassName = "com.cisco.cucm.uds.example.ExampleApp"

sourceSets {
	generatedJaxb
}

configurations {
	xjc
}

repositories {
	mavenCentral()
}

dependencies {
	compile "org.apache.commons:commons-lang3:3.1"

	compile "javax.ws.rs:javax.ws.rs-api:2.0"
	compile "org.glassfish.jersey.core:jersey-client:2.8"
	compile "javax.servlet:javax.servlet-api:3.0.1"
	
	compile "org.slf4j:slf4j-api:1.7.5"
	runtime "org.slf4j:slf4j-log4j12:1.7.5"
	
	xjc "com.sun.xml.bind:jaxb-xjc:2.1.6"
}

task wrapper(type: Wrapper) {
	gradleVersion = "2.0"
}

task xjc {
	inputs.dir "src/main/resources/xsd"
	outputs.dir "src/generatedJaxb"

	doFirst {
		delete "src/generatedJaxb"
		mkdir "src/generatedJaxb/java"
	}

	doLast {
		mkdir("src/generatedJaxb/java")
		
		ant.taskdef(
			name: "xjc",
			classname: "com.sun.tools.xjc.XJCTask",
			classpath: configurations.xjc.asPath
		)
			
		ant.xjc(destdir: "src/generatedJaxb/java", extension: true) {
			schema(dir:"src/main/resources/xsd")
		}

		exec { //delete generated package-info.java files to remove xml namespaces
			workingDir "./src/generatedJaxb/java"
			commandLine "find", ".", "-name", "package-info.java", "-exec", "rm", "{}", ";"
		}
	}
}

compileGeneratedJaxbJava.dependsOn(xjc)
compileJava.dependsOn(compileGeneratedJaxbJava)

compileJava {
	classpath += sourceSets.generatedJaxb.output
}

jar {
	dependsOn = [generatedJaxbClasses,classes]
	from files(sourceSets.generatedJaxb.output)
	exclude "xsd"
}

eclipseClasspath.dependsOn(xjc)

clean.delete "src/generatedJaxb"
